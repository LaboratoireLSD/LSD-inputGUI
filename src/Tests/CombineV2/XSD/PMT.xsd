<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:pmt="primitives_info" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="primitives_info">
	
	<xsd:annotation>
		<xsd:documentation>
			W3C XML Schema for SCHNAPS primitives specific tags in XSD definitions,
			by Marc-Andre Gardner, May 2010.
		</xsd:documentation>
	</xsd:annotation>
	
	<xsd:element name="info">
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute default="en" name="lang" type="xsd:string" use="optional"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="mappedName">
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute default="en" name="lang" type="xsd:string" use="optional"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="returnType">
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="definedBy" use="required">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="argument"/>
								<xsd:enumeration value="staticType"/>
								<xsd:enumeration value="processReturnValue"/>
								<xsd:enumeration value="variableValue"/>
								<xsd:enumeration value="parameterValue"/>
								<xsd:enumeration value="attributeValue"/>
								<xsd:enumeration value="commonType"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>		
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="childBranchTag">
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute default="en" name="lang" type="xsd:string" use="optional"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	
	<!--Next element is only used to correctly define childType-->
			
	<xsd:simpleType name="rest">
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Atom"/>
          <!-- Atomic types(Numeric Types + Bool, String, Char) -->
					<xsd:enumeration value="Bool"/>
          <!-- Boolean types(Bool) -->
			     	 	<xsd:enumeration value="Integer"/>
          <!-- Integer types(Int,UInt,Long, ULong) -->
					<xsd:enumeration value="Number"/>
          <!-- Numeric types(Int,UInt,Long, ULong,Double) -->
					<xsd:enumeration value="Double"/>
          <!-- Floating point types(Double)-->
					<xsd:enumeration value="Any"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:unsignedLong">
					<xsd:minInclusive value="0"/>
          <!-- Argument cannot be less than 0 (argument case)-->
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="(out).*"/>
          <!-- Argument's name must start with out* (variableValue case) -->
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>		
	
	<xsd:element name="childType">
		<xsd:complexType>
			<xsd:simpleContent>
		    		<xsd:extension base="pmt:rest">
			    		<xsd:attribute name="definedBy" use="required">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="argument"/>
								<xsd:enumeration value="staticType"/>
								<xsd:enumeration value="variableValue"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>			
  			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="attributeInfo">
		<xsd:complexType>
			<xsd:simpleContent>
		    		<xsd:extension base="xsd:string">
					<xsd:attribute default="en" name="lang" type="xsd:string" use="optional"/>
					<xsd:attribute default="false" name="reference" type="xsd:boolean" use="optional"/>
					<xsd:attribute default="" name="pairedAttr" type="xsd:string" use="optional"/>
				</xsd:extension>			
  			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="attributeMappedName">
		<xsd:complexType>
			<xsd:simpleContent>
		    		<xsd:extension base="xsd:string">
					<xsd:attribute default="en" name="lang" type="xsd:string" use="optional"/>
				</xsd:extension>			
  			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="attributeType">
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="Bool"/>
		     	 	<xsd:enumeration value="Double"/>
				<xsd:enumeration value="Float"/>
				<xsd:enumeration value="Int"/>
				<xsd:enumeration value="UInt"/>
				<xsd:enumeration value="Long"/>
				<xsd:enumeration value="ULong"/>
				<xsd:enumeration value="String"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	
	<xsd:element name="eventHandler">
		<xsd:complexType>
			<xsd:sequence minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="event">
					<xsd:complexType mixed="true">
						<xsd:sequence>
							<xsd:element minOccurs="0" maxOccurs="unbounded" name="eventArg">
								<xsd:complexType>
									<xsd:attribute name="argIndex" type="xsd:nonNegativeInteger" use="required"/>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="eventName" type="xsd:string" use="required"/>
						<xsd:attribute name="gravity" use="required">
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="None"/>
									<xsd:enumeration value="Notice"/>
									<xsd:enumeration value="Warning"/>
									<xsd:enumeration value="Error"/>
									<xsd:enumeration value="Fatal Error"/>
									<xsd:enumeration value="Sudden Destruction Of The Earth"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
						<xsd:attribute default="false" name="forceCorrection" type="xsd:boolean" use="optional"/>
						<xsd:attribute default="false" name="addComment" type="xsd:boolean" use="optional"/>
						<xsd:attribute default="true" name="warn" type="xsd:boolean" use="optional"/>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
